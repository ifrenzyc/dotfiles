(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("utf8" (((:file "/Users/yangc/Dropbox/itsycnotes/00_Notes/MySQL.org") . 1) (org-mode . 1) (nil . 1)) "EBDAB4" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*<3>]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Aa123456" (((:file "/Users/yangc/Dropbox/itsycnotes/01_Projects/10_智慧运营 BSS.org") . 1) (org-mode . 1) (nil . 1)) "use-package" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 2) (emacs-lisp-mode . 2) (nil . 2)) ":ensure" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "apathy" (((:file "/Users/yangc/Library/Rime/squirrel.custom.yaml") . 1) (yaml-mode . 1) (nil . 1)) "1000'" ((org-mode . 1) (nil . 1)) "~/.emacs.d/" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/.emacs.d/elpa/" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/.emacs.d/elpa/hydra-20180508.1008/" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org") . 1) (org-mode . 1) (nil . 2) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1)) "timemachine" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1) ((:keyword "general-def") . 1) (emacs-lisp-mode . 1) (nil . 1)) "eyebrowse" (((:file "/Users/yangc/.dotfiles/emacs/emacs.org") . 2) (org-mode . 2) (nil . 2)))) company-statistics--log [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("utf8" (nil . 1) (org-mode . 1) ((:file "/Users/yangc/Dropbox/itsycnotes/00_Notes/MySQL.org") . 1)) ("EBDAB4" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*<3>]") . 1)) ("Aa123456" (nil . 1) (org-mode . 1) ((:file "/Users/yangc/Dropbox/itsycnotes/01_Projects/10_智慧运营 BSS.org") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("apathy" (nil . 1) (yaml-mode . 1) ((:file "/Users/yangc/Library/Rime/squirrel.custom.yaml") . 1)) ("1000'" (nil . 1) (org-mode . 1)) ("~/.emacs.d/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("~/.emacs.d/elpa/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("~/.emacs.d/elpa/hydra-20180508.1008/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("require" (nil . 2) (org-mode . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("timemachine" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "general-def") . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1)) ("eyebrowse" (nil . 2) (org-mode . 2) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org") . 2)) ("eyebrowse" (nil . 1) (org-mode . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/Users/yangc/.dotfiles/emacs/emacs.org[*Org Src emacs.org[ emacs-lisp ]*]") . 1))] company-statistics--index 0)